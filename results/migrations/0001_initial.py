# Generated by Django 4.0.3 on 2022-07-14 08:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import results.models
import utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=64)),
                ('skills', models.JSONField()),
                ('is_open', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=64)),
                ('stream', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'ordering': ('level',),
            },
        ),
        migrations.CreateModel(
            name='LevelGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(choices=[('P', 'Primary'), ('O', 'Ordinary'), ('A', 'Advanced')], max_length=128)),
                ('full', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128)),
                ('start', models.DateField()),
                ('stop', models.DateField()),
            ],
            options={
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='UserPref',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pref', models.JSONField(default=results.models.default_user_prefs)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=256)),
                ('initials', models.CharField(max_length=8)),
                ('picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=-1, size=[200, 200], storage=utils.OverwiteStorageSystem, upload_to=results.models.teacher_picture_upload_loacation)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('code', models.CharField(max_length=16, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('abbr', models.CharField(blank=True, max_length=8, null=True)),
                ('created_from_system', models.BooleanField(default=True)),
                ('is_subsidiary', models.BooleanField(blank=True, null=True)),
                ('is_selectable', models.BooleanField(default=False)),
                ('no_papers', models.IntegerField(default=1)),
                ('field', models.CharField(choices=[('Arts', 'Arts'), ('Science', 'Science')], max_length=16)),
                ('level_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.levelgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('middle_name', models.CharField(blank=True, max_length=64, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('dob', models.DateField()),
                ('picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=-1, size=[200, 200], storage=utils.OverwiteStorageSystem, upload_to=results.models.student_picture_upload_loacation)),
                ('class_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='results.classroom')),
                ('subjects', models.ManyToManyField(blank=True, related_name='students', to='results.subject')),
            ],
            options={
                'ordering': ['class_room__level'],
            },
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('number', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papers', to='results.subject')),
            ],
            options={
                'ordering': ['subject'],
                'unique_together': {('number', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=256)),
                ('rank', models.IntegerField(unique=True)),
                ('level_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.levelgroup')),
                ('papers', models.ManyToManyField(blank=True, related_name='levels', to='results.paper')),
                ('subjects', models.ManyToManyField(blank=True, related_name='levels', to='results.subject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GradingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128)),
                ('D1', models.IntegerField(default=100)),
                ('D2', models.IntegerField(default=89)),
                ('C3', models.IntegerField(default=79)),
                ('C4', models.IntegerField(default=69)),
                ('C5', models.IntegerField(default=59)),
                ('C6', models.IntegerField(default=54)),
                ('P7', models.IntegerField(default=49)),
                ('P8', models.IntegerField(default=39)),
                ('F9', models.IntegerField(default=29)),
                ('is_default', models.BooleanField(default=True)),
                ('level_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading_systems', to='results.levelgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='classroom',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.level'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.teacher'),
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('date', models.DateField()),
                ('is_open', models.BooleanField(default=True)),
                ('class_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.classroom')),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.paper')),
                ('period', models.ForeignKey(default=results.models.period_default, on_delete=django.db.models.deletion.CASCADE, to='results.period')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.teacher')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ActivityScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('mark', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.activity')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='class_room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.classroom'),
        ),
        migrations.AddField(
            model_name='activity',
            name='period',
            field=models.ForeignKey(default=results.models.period_default, on_delete=django.db.models.deletion.CASCADE, to='results.period'),
        ),
        migrations.AddField(
            model_name='activity',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.subject'),
        ),
        migrations.AddField(
            model_name='activity',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.teacher'),
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('mark', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.assessment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.student')),
            ],
            options={
                'unique_together': {('assessment', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('class_teacher_comment', models.CharField(blank=True, max_length=512)),
                ('head_teacher_comment', models.CharField(blank=True, max_length=512)),
                ('activity_class_teacher_comment', models.CharField(blank=True, max_length=512)),
                ('activity_head_teacher_comment', models.CharField(blank=True, max_length=512)),
                ('computation', models.JSONField(null=True)),
                ('aggregates', models.IntegerField(default=72, validators=[django.core.validators.MinValueValidator(8), django.core.validators.MaxValueValidator(72)])),
                ('points', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('promo_comment', models.CharField(blank=True, max_length=512, null=True)),
                ('promo_is_approved', models.BooleanField(default=False)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='results.level')),
                ('period', models.ForeignKey(default=results.models.period_default, on_delete=django.db.models.deletion.CASCADE, to='results.period')),
                ('promo_from_class_room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promotions_from', to='results.classroom')),
                ('promo_to_class_room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promotions_to', to='results.classroom')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.student')),
            ],
            options={
                'ordering': ['level'],
                'unique_together': {('student', 'period', 'level', 'promo_from_class_room', 'promo_to_class_room')},
            },
        ),
        migrations.CreateModel(
            name='PaperAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('class_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.classroom')),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.paper')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='results.teacher')),
            ],
            options={
                'ordering': ['class_room__level'],
                'unique_together': {('teacher', 'class_room', 'paper')},
            },
        ),
        migrations.CreateModel(
            name='CustomGradingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('class_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.classroom')),
                ('grading_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.gradingsystem')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.subject')),
            ],
            options={
                'unique_together': {('class_room', 'subject', 'grading_system')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='classroom',
            unique_together={('name', 'stream')},
        ),
    ]
